{"version":3,"sources":["./src/app/main/purchased-details/purchased-details.component.ts","./src/app/main/purchased-details/purchased-details.component.html","./src/app/home/welcome/welcome.component.ts","./src/app/home/welcome/welcome.component.html","./src/app/main/viewbids/viewbids.component.ts","./src/app/main/viewbids/viewbids.component.html","./src/app/services/routerguard.service.ts","./src/app/services/card-details.service.ts","./src/app/services/myinterceptor.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/api.service.ts","./src/app/home/login/login.component.ts","./src/app/home/login/login.component.html","./src/app/services/orders.service.ts","./src/app/main/sellproduct/sellproduct.component.ts","./src/app/main/sellproduct/sellproduct.component.html","./src/app/main/payment/payment.component.ts","./src/app/main/payment/payment.component.html","./src/app/main/payment-success/payment-success.component.ts","./src/app/main/payment-success/payment-success.component.html","./src/app/services/routeguard2.service.ts","./src/app/services/products.service.ts","./src/app/main/Categories.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/main/myauctions/myauctions.component.ts","./src/app/main/myauctions/myauctions.component.html","./src/app/app.module.ts","./src/app/main/bidding/bidding.component.ts","./src/app/main/bidding/bidding.component.html","./src/app/home/register/register.component.ts","./src/app/home/register/register.component.html","./src/app/services/authentication.service.ts","./src/app/main/sold-details/sold-details.component.ts","./src/app/main/sold-details/sold-details.component.html","./src/app/services/registration.service.ts","./src/app/pagenotfound/pagenotfound.component.ts","./src/app/pagenotfound/pagenotfound.component.html","./src/app/services/bidding.service.ts","./src/app/app-routing.module.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/main/productslist/productslist.component.ts","./src/app/main/productslist/productslist.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { OrdersService } from 'src/app/services/orders.service';\n\n@Component({\n  selector: 'app-purchased-details',\n  templateUrl: './purchased-details.component.html',\n  styleUrls: ['./purchased-details.component.css']\n})\nexport class PurchasedDetailsComponent implements OnInit {\n\n  isEmpty=true\n  orders\n  customer_id\n  constructor(private http:HttpClient,private ordersService:OrdersService,private apiService:ApiService) { }\n\n  ngOnInit(): void {\n    this.apiService.getUserId(sessionStorage.getItem('authenticatedUser')).subscribe(\n      data => {\n        this.customer_id = data\n        this.apiService.getPlacedOrders(data).subscribe(\n          data => {\n            this.orders = data\n            for (const iterator of this.orders) {\n              this.isEmpty = false\n              let seller_id = iterator['seller_id']\n              this.apiService.getUserNameById(seller_id).subscribe(\n                data => {\n                  iterator['seller_name'] = data['username']\n                }\n              )\n            }\n          }\n        )\n      }\n    )\n  }\n\n  getTotal(){\n    let sum = 0\n    for (const iterator of this.orders) {\n      sum += iterator['price']\n    }\n    return sum\n  }\n\n  getAllOrders(){\n    this.ngOnInit()\n  }\n\n  getSortedOrders(sortBy){\n    this.apiService.getOrders(sortBy,this.customer_id).subscribe(\n      data => {\n        this.orders = data\n        console.log(data)\n            for (const iterator of this.orders) {\n              let seller_id = iterator['seller_id']\n              this.apiService.getUserNameById(seller_id).subscribe(\n                data => {\n                  iterator['seller_name'] = data['username']\n                }\n              )\n            }\n      }\n    )\n  }\n\n}\n","<body>\n    <div *ngIf = \"!isEmpty container\">\n        <div class=\"container\" id=\"top-pannel\" style=\"margin-left: auto;margin-top: auto;\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-body\">\n                        <h3 class=\"text-center\">Categorize</h3><hr>\n                        <form>\n                            <label>View By : </label>\n                            <div class=\"form-group\">\n                                <input type=\"radio\" name=\"frequency\" class=\"ml-5\" (click)=\"getAllOrders()\"><label><b>All</b></label>\n                                <input type=\"radio\" name=\"frequency\" class=\"ml-5\" (click)=\"getSortedOrders('today')\"><label><b>Today</b></label>\n                                <input type=\"radio\" name=\"frequency\" class=\"ml-5\" (click)=\"getSortedOrders('week')\"><label><b>Weekly</b></label>\n                                <input type=\"radio\" name=\"frequency\" class=\"ml-5\" (click)=\"getSortedOrders('month')\"><label><b>Monthly</b></label>\n                                <input type=\"radio\" name=\"frequency\" class=\"ml-5\" (click)=\"getSortedOrders('year')\"><label><b>Yearly</b></label>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"panel-footer\">\n                        <div class=\"d-flex justify-content-end\">\n                            <strong class=\"text-end\">Total Amount : {{getTotal() | currency}}</strong>\n                        </div>\n                    </div>\n                    <hr>\n                </div>\n        </div>\n        <div class=\"container\">\n            <table class=\"table table-striped\">\n                <tbody>\n                  <tr *ngFor=\"let order of orders\">\n                    <div class=\"card mb-4\">\n                        <div class=\"card-body row\">\n                            <div class=\"col-5 border-right\">\n                                <img [src]=\"order.product_image\" width=\"250px\" height=\"250px\" style=\"margin-left: auto;margin-right: auto;\">\n                            </div>\n                            <div class=\"col-7 border-left\">\n                                    <div class=\"card-head\">\n                                        <h3 class=\"text-center text-primary text-bolder p-2\">{{order.product_name}}</h3>\n                                        <hr>\n                                    </div>\n                                    <p>Order Id : <strong>{{order.order_id}}</strong></p>\n                                    <p>Category : <strong>{{order.category}}</strong></p>\n                                    <p>Order Date : <strong>{{order.order_date | date}}</strong></p>\n                                    <p>Seller Name : <strong>{{order.seller_name}}</strong></p>\n                                    <p>Price : <strong>{{order.price | currency}}</strong></p>\n                            </div>\n                        </div>\n                    </div>\n                  </tr>\n                </tbody>\n              </table>\n            <hr>\n        </div>\n</div>\n<div *ngIf=\"isEmpty\" class=\"mt-5\">\n    <div>\n        <img src=\"\\assets\\images\\emptyCart.png\" style=\"margin-left: auto; margin-right: auto;display: block\">\n    </div>\n    <h3 class=\"text-center mt-5\">\n        No Orders Placed...\n    </h3>\n</div>\n</body>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n<div class=\"row justify-content-center\">\n <div id=\"element\" class=\"col align-content-center justify-content-center\">\n   <h1 class=\"text-xl-left\">Welcome To</h1>\n    <pre>Online\nAuction\nPlatform</pre>\n   <span><a class=\"align-content-center\" routerLink=\"register\">Register</a><small>here</small></span>\n </div>\n</div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { BiddingService } from 'src/app/services/bidding.service';\n\n@Component({\n  selector: 'app-viewbids',\n  templateUrl: './viewbids.component.html',\n  styleUrls: ['./viewbids.component.css']\n})\nexport class ViewbidsComponent implements OnInit {\n\n  bids\n  userId\n  isEmpty = false\n  constructor(private bidsService:BiddingService,private router:Router,private apiService:ApiService) { }\n\n  ngOnInit(): void {\n\n    this.apiService.getUserId(sessionStorage.getItem('authenticatedUser')).subscribe(\n        data => {\n          this.userId = data\n          this.apiService.getBidsPlaced(this.userId).subscribe(\n            data => {\n              this.bids = data\n              console.log(this.bids)\n              if(this.bids.length == 0){\n                this.isEmpty = true\n              }\n              for (let i = 0; i < this.bids.length; i++) {\n                const bid = this.bids[i];\n                console.log(bid)\n                this.apiService.getProductByProductId(bid['product_id']).subscribe(\n                  data =>{\n                    bid['product'] = data\n                    this.apiService.getUserNameById(bid['product']['seller_id']).subscribe(\n                      data => {\n                        bid['sellername'] = data['username']\n                      }\n                    )\n                  }\n                )\n              }\n            }\n          )\n        }\n    )\n  }\n\n  purchaseProduct(id){\n    this.router.navigate(['/app/payment/bid/',id])\n  }\n}\n","<body>\n  <h1 *nfIf=\"!isEmpty\" class=\"text-center\">Your Bids</h1>\n<div class=\"row mt-1 container-fluid\">\n    <div class=\"col-sm-4\" *ngFor=\"let bid of bids\">\n      <div class=\"card mb-4 shadow-sm\">\n        <img [src]=\"bid.product.image\" width=\"250px\" height=\"250px\" class=\"rounded mx-auto \">\n        <div class=\"d-flex card-body\" style=\"flex-direction: column;\">\n          <h1 class=\"text-center\">{{bid.product.productname}}</h1>\n          <p class=\"card-text \">{{bid.product.description}}</p>\n          <p class=\"text-muted\">Seller : {{bid.sellername}}</p>\n          <h5>Initial Bid : {{ bid.product.initialbid | currency}}</h5>\n          <h5 >Your Bid : {{ bid.bidval | currency}}</h5><br>\n          <div class=\"col d-flex\" *ngIf=\"bid.status\">\n            <h6> Your Bid has been accepted !!!</h6><a (click)=\"purchaseProduct(bid.bid_id)\" class=\"btn btn-success\">Pay</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container md-6 mt-5 shadow-sm\" *ngIf=\"isEmpty\">\n    <div class=\"align-content-center justify-content-center\">\n      <img src=\"\\assets\\images\\no_results_found.png\" style=\"margin-left: auto; margin-right: auto;display: block;height: auto;width: auto;\">\n    </div>\n    <h1 class=\"text-center\">You didn't Bid for any Product...<a routerLink=\"..\">Click here</a>To Go Products Page<br><small class=\"text-primary\"> Thanks for Visiting the Site..</small></h1>\n  </div>\n</body>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginComponent } from '../home/login/login.component';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterguardService implements CanActivate{\n\n  constructor(private authenticator:AuthenticationService,private router:Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    if(this.authenticator.isUserLoggedIn()){\n      return true\n    }else{\n      this.router.navigate(['/home/login'])\n      return false\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardDetailsService {\n\n  baseUrl = \"http://localhost:8080/cards\"\n\n  constructor(private http:HttpClient) { }\n\n  saveCardDetails(cardDetails){\n    return this.http.post(this.baseUrl,cardDetails)\n  }\n\n  getUserCards(user){\n    return this.http.get<any[]>(this.baseUrl+\"/\"+user)\n  }\n}\n","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyinterceptorService implements HttpInterceptor{\n\n  constructor(private authenticator:AuthenticationService) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if(this.authenticator.isUserLoggedIn() && req.url.indexOf('login')==-1){\n      const myReq = req.clone({\n          headers : new HttpHeaders({\n            'Authorization' : sessionStorage.getItem('token')\n          })\n        });\n      return next.handle(myReq)\n    }else{\n      return next.handle(req)\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-inverse\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a class=\"navbar-brand\" routerLink=\"/home\"><img src=\"\\assets\\images\\logo.png\" style=\"border-radius: 50%;\" height=\"50px\" width=\"50px\"></a>\n      <a class=\"navbar-brand\" routerLink=\"/home\">Bidding BaBa</a>\n    </div>\n    <div class=\"float-right\">\n      <a routerLink=\"/\" >Home</a>\n      <a routerLink=\"/home/login\" routerLinkActive='active'>Login</a>\n      <a routerLink=\"/home/register\" routerLinkActive='active'>Register</a>\n    </div>\n  </div>\n</nav>\n<router-outlet></router-outlet>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../main/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  usersBaseUrl = \"http://localhost:8080/users\"\n  productsBaseUrl = \"http://localhost:8080/products\"\n  bidsBaseUrl = \"http://localhost:8080/bids\"\n  cardDetailsBaseUrl = \"http://localhost:8080/cards\"\n  ordersBaseUrl = \"http://localhost:8080/orders\"\n  constructor(private http:HttpClient) { }\n\n  registerUser(user){\n    const body = JSON.stringify(user)\n    console.log(user)\n    const headers = new HttpHeaders({'Content-Type':'application/json; charset=utf-8'});\n    return this.http.post(this.usersBaseUrl+\"/register\",body,{headers:headers})\n  }\n\n  getUserId(username){\n    return this.http.get(this.usersBaseUrl+\"/\"+username)\n  }\n\n  addProduct(product){\n    return this.http.post(this.productsBaseUrl+\"/add\",product)\n  }\n\n  getProducts(username){\n    return this.http.get<any>(this.productsBaseUrl+\"/all/\"+username)\n  }\n\n  getUserNameById(id):Observable<any>{\n    return this.http.get<any>(this.usersBaseUrl+\"/username/\"+id)\n  }\n\n  getUserProducts(username){\n    return this.http.get(this.productsBaseUrl+\"/my/\"+username)\n  }\n\n  getProductByProductId(id){\n    return this.http.get<Product>(this.productsBaseUrl+\"/product/\"+id)\n  }\n\n  addBidForProduct(bid){\n    const body = JSON.stringify(bid)\n    console.log(bid)\n    const headers = new HttpHeaders({'Content-Type':'application/json; charset=utf-8'});\n    return this.http.post(this.bidsBaseUrl+\"/add\",bid,{headers:headers})\n  }\n\n  getBidsReceivedForProduct(uid){\n    return this.http.get(this.bidsBaseUrl+\"/received/\"+uid)\n  }\n\n  getBidsPlaced(cid){\n    return this.http.get(this.bidsBaseUrl+\"/placed/\"+cid)\n  }\n\n  acceptBid(bid_id){\n    return this.http.post(this.bidsBaseUrl+\"/accept/\"+bid_id,[])\n  }\n\n  getBidByBidId(bid_id){\n    return this.http.get(this.bidsBaseUrl+\"/get/\"+bid_id)\n  }\n\n  saveCardDetails(cardDetails){\n    console.log(cardDetails)\n    return this.http.post(this.cardDetailsBaseUrl+\"/add\",cardDetails)\n  }\n\n  getCardDetailsByCustomer(customerId){\n    return this.http.get<any>(this.cardDetailsBaseUrl+\"/get/\"+customerId)\n  }\n\n  addOrderDetails(order){\n    return this.http.post(this.ordersBaseUrl+\"/add\",order)\n  }\n\n  getPlacedOrders(customer_id){\n    return this.http.get(this.ordersBaseUrl+\"/placed/\"+customer_id)\n  }\n\n  getReceivedOrders(seller_id){\n    return this.http.get(this.ordersBaseUrl+\"/received/\"+seller_id)\n  }\n\n  getOrders(sortType,customer_id){\n    return this.http.get(this.ordersBaseUrl+\"/placed/\"+sortType+\"/\"+customer_id)\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  isLoginSuccess = true;\n  loginForm: FormGroup;\n  constructor(private builder: FormBuilder, private route: Router,private authenticator:AuthenticationService) {\n    this.loginForm = this.builder.group({\n      username: ['', [Validators.required, Validators.minLength(4)]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    this.authenticator.login(this.loginForm.value.username,this.loginForm.value.password).subscribe(\n      data =>{\n        this.isLoginSuccess = true\n      },\n      error =>{\n        this.isLoginSuccess = false\n      }\n    );\n  }\n}\n","<body>\n<div class=\"mystyle row justify-content-center\">\n  <div class=\"container col-lg-5 \">\n    <h3 class=\"mystyle text-md-center m-5\">Login</h3>\n    <hr>\n    <div *ngIf=\"!isLoginSuccess\" class=\"alert alert-danger\">\n      Invalid Login Credentials\n    </div>\n    <form [formGroup]=\"loginForm\" (ngSubmit)='login()'>\n      <div class=\"form-group\">\n        <p class=\"mystyle\">username</p>\n        <input type=\"text\" class=\"form-control\" [class.invalid-input]=\"loginForm.get('username').touched && loginForm.get('username').invalid\" formControlName=\"username\">\n        <div *ngIf=\"loginForm.get('username').invalid && loginForm.get('username').touched\">\n          <small *ngIf=\"loginForm.get('username').errors?.required\"\n                 [class.text-danger]=\"loginForm.get('username').errors?.required\" >name required</small>\n          <small *ngIf=\"loginForm.get('username').errors?.minlength\"\n                 [class.text-danger]=\"loginForm.get('username').errors?.minlength\" >name should have atleast 4\n            characters</small>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <p class=\"\">password</p>\n        <input name=\"password\" class=\"form-control\" [class.invalid-input]=\"loginForm.get('password').touched && loginForm.get('password').invalid\" formControlName=\"password\" required type=\"password\">\n        <div *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched\">\n          <small *ngIf=\"loginForm.get('password').errors?.required\"\n                 [class.text-danger]=\"loginForm.get('username').errors?.required\" >password required</small>\n          <small *ngIf=\"loginForm.get('password').errors?.minlength\"\n                 [class.text-danger]=\"loginForm.get('password').errors?.minlength\" >password should have atleast 6\n            characters</small>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <input class=\"btn btn-success\" type=\"submit\" [disabled]=\"loginForm.invalid\" value=\"Login\"><span>\n        <a style=\"margin-left: 20px;color: white\" href=\"#\">Forgot Password?</a>\n      </span>\n      </div>\n    </form>\n  </div>\n</div>\n</body>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  baseUrl = 'http://localhost:8080/order'\n  constructor(private http:HttpClient) { }\n\n  addOrder(orderDetails){\n    return this.http.post(this.baseUrl,orderDetails)\n  }\n\n  getPurchasedOrders(customername){\n    return this.http.get(this.baseUrl+\"/purchased/\"+customername)\n  }\n\n  getSellerOrders(sellername){\n    return this.http.get(this.baseUrl+\"/sold/\"+sellername)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\n@Component({\n  selector: 'app-sellproduct',\n  templateUrl: './sellproduct.component.html',\n  styleUrls: ['./sellproduct.component.css']\n})\nexport class SellproductComponent implements OnInit {\n\n  auctProduct:any\n  imageFile : File\n  imageUrl\n  fileName\n  userId\n  sellerForm:FormGroup;\n  constructor(private builder:FormBuilder,private apiService:ApiService,\n    private router:Router) {\n   }\n\n   ngOnInit(): void {\n    this.sellerForm = this.builder.group({\n        productname : ['',[Validators.required]],\n        description: ['',[Validators.required]],\n        category : ['', [Validators.required]],\n        initialbid : ['',[Validators.required]],\n        seller_id :[''],\n        file : ['',[Validators.required]],\n        image: new FormControl()\n      }\n    )\n    this.apiService.getUserId(sessionStorage.getItem('authenticatedUser')).subscribe(\n      data =>{\n        this.sellerForm.patchValue({seller_id:data})\n      }\n    )\n  }\n\n  auctionProduct(){\n    this.sellerForm.patchValue({image:this.imageUrl})\n    this.auctProduct = this.sellerForm.value\n    console.log(this.auctProduct)\n    this.apiService.addProduct(this.auctProduct).subscribe(\n      data =>{\n        if(data!=0){\n          console.log(\"Product Added successfully\")\n          this.router.navigate(['app/myauctions'])\n        }else{\n          console.log(\"Error While Adding the Product\")\n        }\n      }\n    )\n  }\n\n  onSelectedFile(event){\n    this.imageFile = event.target.files[0]\n    var reader = new FileReader();\n    reader.readAsDataURL(this.imageFile);\n    reader.onload = (event:any) => {\n      console.log(event.target.result)\n      this.imageUrl = event.target.result;\n    }\n    }\n}\n","<div class=\"row container-fluid justify-content-center\">\r\n    <div class=\"col-5\">\r\n        <div class=\"text-center\">\r\n            <h1 class=\"h3\">Sell Product</h1>\r\n        </div>\r\n        <form [formGroup]=\"sellerForm\" (ngSubmit)=\"auctionProduct()\">\r\n            <div class=\"form-group\">\r\n                <p>Product Name</p>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"productname\"\r\n                 [class.invalid-input]=\"sellerForm.get('productname').touched && sellerForm.get('productname').invalid\" >\r\n            </div>\r\n            <div *ngIf=\"sellerForm.get('productname').touched && sellerForm.get('productname').invalid\">\r\n                <small class=\"text-danger\">Enter the productname</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <p>Product Category</p>\r\n                <select class=\"form-control\" formControlName='category'>\r\n                    <option selected value=\"\">Choose One Category</option>\r\n                    <option value=\"Mobiles\">Mobiles</option>\r\n                    <option value=\"Laptops & Computers\">Laptops & Computers</option>\r\n                    <option value=\"Fruits\">Fruits</option>\r\n                    <option value=\"Furniture\">Furniture</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <p class=\"\">Minimum Bid</p>\r\n                <input type=\"number\" class=\"form-control\" formControlName=\"initialbid\"\r\n                [class.invalid-input]=\"sellerForm.get('initialbid').touched && sellerForm.get('initialbid').invalid\">\r\n            </div>\r\n            <div *ngIf=\"sellerForm.get('initialbid').touched && sellerForm.get('initialbid').invalid\">\r\n                <small class=\"text-danger\" *ngIf=\"sellerForm.get('initialbid').errors?.required\">Please Set Minimum Bid Value</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <p>Description</p>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"description\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <p>Product Image</p>\r\n                <input type=\"file\" class=\"formControl\" (change)=\"onSelectedFile($event)\" formControlName='file'>\r\n            </div>\r\n            <button [disabled]=\"!sellerForm.valid\" class=\"btn btn-primary\">Auction</button>\r\n        </form>\r\n    </div>\r\n    <div *ngIf=\"sellerForm.get('file').touched\" class=\"col-5 align-content-left\">\r\n        <img [src]=\"imageUrl\" width=\"440px\" height=\"440px\">\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationCancel, Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { BiddingService } from 'src/app/services/bidding.service';\nimport { CardDetailsService } from 'src/app/services/card-details.service';\nimport { OrdersService } from 'src/app/services/orders.service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\n  months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"]\n  year = this.generateYear()\n  bid\n  bidId\n  orderDetails={}\n  cardDetails\n  savedCards\n  constructor(private activatedRoute:ActivatedRoute,private bidsService:BiddingService,\n    private router:Router,private builder:FormBuilder,private cardService:CardDetailsService,\n    private ordersService:OrdersService,private apiService:ApiService) { }\n\n  ngOnInit(): void {\n    this.bidId = (this.activatedRoute.snapshot.paramMap.get('id'))\n    this.apiService.getBidByBidId(this.bidId).subscribe(\n      data => {\n        this.bid = data\n        this.apiService.getProductByProductId(this.bid['product_id']).subscribe(\n          data => {\n            this.bid['product'] = data\n          }\n        )\n      }\n    )\n    this.apiService.getUserId(sessionStorage.getItem('authenticatedUser')).subscribe(\n      data => {\n        this.apiService.getCardDetailsByCustomer(data).subscribe(\n          data => {\n            console.log(data)\n            this.savedCards = data\n          }\n        )\n      }\n    )\n    this.cardDetails = this.builder.group({\n      cardholder : ['',[Validators.required]],\n      cardnumber : ['',[Validators.required]],\n      month : ['',[Validators.required]],\n      year : ['',[Validators.required]],\n      cvv : ['',[Validators.required]],\n      save : [''],\n      customer_id:['']\n      }\n    )\n  }\n\n  placeOrder(bid){\n    if(this.cardDetails.get('save').value){\n      this.cardDetails.patchValue({month:parseInt(this.cardDetails.get('month').value)})\n      this.cardDetails.patchValue({year:parseInt(this.cardDetails.get('year').value)})\n      this.cardDetails.patchValue({customer_id:bid.customer_id})\n      this.apiService.saveCardDetails(this.cardDetails.value).subscribe(\n        data => {\n          console.log(data)\n        }\n      )\n    }\n    this.orderDetails['order_date'] = Date.now()\n    this.orderDetails['price'] = this.bid.bidval\n    this.orderDetails['customer_id'] = this.bid.customer_id\n    this.createOrderDetails(bid.product)\n    console.log(this.orderDetails)\n    this.apiService.addOrderDetails(this.orderDetails).subscribe(\n      data => {\n        console.log(data)\n        this.router.navigate(['app/payment-success'])\n      }\n    )\n  }\n\n  generateYear(){\n    let i=2021\n    let l = []\n    while(i<2040){\n      l.push(i)\n      i++\n    }\n    return l\n  }\n\n  createOrderDetails(product){\n    this.orderDetails['product_id'] = product.pid\n    this.orderDetails['product_name'] = product.productname\n    this.orderDetails['category'] = product.category\n    this.orderDetails['product_image'] = product.image\n    this.orderDetails['seller_id'] = product.seller_id\n  }\n\n  setCardDetails(card){\n    this.cardDetails.patchValue(card)\n  }\n}\n","<body>\n    <body>\n        <div class=\"container mt-5\">\n            <div class=\"row shadow-sm\">\n                <img [src]=\"bid.product.image\" width=\"200\" height=\"200\" class=\"col-4\">\n                <div class=\"col-8\">\n                    <h5 class=\"text-center text-success\">{{bid.product.productname}}</h5>\n                    <p><strong>Description : </strong> {{bid.product.description}}</p>\n                    <strong>BidValue : </strong><p style=\"display: inline;\">{{bid.bidval | currency}}</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"container mt-5 mb-4 shadow-sm\">\n            <h3 class=\"text-center text-primary\"><u>Payment Details</u></h3>\n            <form style=\"padding: 20px;\" [formGroup]=\"cardDetails\" (ngSubmit)=\"placeOrder(bid)\" class=\"shadow-sm\">\n                <h5><u> Card Details :</u></h5>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-6\">\n                        <label>Card Holder's Name : </label>\n                        <input placeholder=\"Card Holder's Name\" pattern=\"[^0-9]*\" class=\"form-control\" formControlName='cardholder' \n                            [class.invalid-input]=\"cardDetails.get('cardholder').touched && cardDetails.get('cardholder').invalid\">\n                        <div *ngIf=\"cardDetails.get('cardholder').touched && cardDetails.get('cardholder').invalid\">\n                            <small class=\"text-danger\" *ngIf=\"cardDetails.get('cardholder').errors?.required\">name can't be empty</small>\n                            <small class=\"text-danger\" *ngIf=\"cardDetails.get('cardholder').errors?.pattern\">enter valid name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-6\">\n                        <label>Card Number : </label>\n                        <input placeholder=\"Card Number\" pattern=\"[0-9]{16}\" onKeyPress=\"if(this.value.length==16) return false;\" type=\"number\" class=\"form-control\" formControlName='cardnumber'\n                            [class.invalid-input]=\"cardDetails.get('cardnumber').touched && cardDetails.get('cardnumber').invalid\">\n                        <div *ngIf=\"cardDetails.get('cardnumber').touched && cardDetails.get('cardnumber').invalid\">\n                                <small class=\"text-danger\" *ngIf=\"cardDetails.get('cardnumber').errors?.required\">enter card details</small>\n                                <small class=\"text-danger\" *ngIf=\"cardDetails.get('cardnumber').errors?.pattern\">enter valid card details</small>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row \">\n                    <div class=\"form-group col-6\">\n                        <label>Expiry : </label>\n                        <div class=\"form-row\">\n                            <div class=\"col-6 form-group\">\n                                <select class=\"form-control\" formControlName='month' [class.invalid-input]=\"cardDetails.get('month').touched && cardDetails.get('month').invalid\">\n                                    <option selected value=\"\">Month</option>\n                                    <option *ngFor=\"let m of months;let i=index\" [value]='i+1' >{{m}}</option>\n                                </select>\n                                <small class=\"text-danger\" *ngIf=\"cardDetails.get('month').touched && cardDetails.get('month').invalid\">select month</small>\n                            </div>\n                            <div class=\"col-6 form-group\">\n                                <select class=\"form-control\" formControlName='year'[class.invalid-input]=\"cardDetails.get('year').touched && cardDetails.get('year').invalid\">\n                                    <option selected value=\"\">Year</option>\n                                    <option *ngFor=\"let y of year;\" [value]='y'>{{y}}</option>\n                                </select>\n                                <small class=\"text-danger\" *ngIf=\"cardDetails.get('year').touched && cardDetails.get('year').invalid\">select year</small>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-6\">\n                        <label>CVV : </label>\n                        <input placeholder=\"CVV\" type=\"number\" pattern=\"\\d{3}\"  onKeyPress=\"if(this.value.length==3) return false;\"  class=\"form-control\" formControlName=\"cvv\"\n                            [class.invalid-input]=\"cardDetails.get('cvv').touched && cardDetails.get('cvv').invalid\">\n                        <div *ngIf=\"cardDetails.get('cvv').touched && cardDetails.get('cvv').invalid\">\n                                <small class=\"text-danger\" *ngIf=\"cardDetails.get('cvv').errors?.required\">enter cvv</small>\n                                <small class=\"text-danger\" *ngIf=\"cardDetails.get('cvv').errors?.pattern\">enter valid cvv</small>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row justify-content-center\">\n                    <div class=\"col-6 form-check form-group\">\n                        <input type=\"checkbox\" value=\"true\" formControlName='save'><label style=\"margin-left: 5px;\">Save Card Details</label>\n                    </div>\n                </div>\n                <div class=\"form-row justify-content-center\">\n                    <div class=\"col-2\">\n                        <input type=\"submit\" [disabled]=\"cardDetails.invalid\" [value]=\"'Pay '+(bid.bidval | currency)\" class=\"form-control btn-success\">\n                    </div>\n                </div>\n                <div *ngIf=\"savedCards\">\n                    <h6>Saved Cards : </h6>\n                    <div class=\"form-group ml-5\">\n                        <div *ngFor=\"let card of savedCards\">\n                            <input type=\"radio\" name=\"card\" [value] = \"card\" (click)=\"setCardDetails(card)\" class=\"mb-4\"><strong style=\"display: inline;\"> {{\"    \"+card.cardnumber.toString().substring(0,4)+\"*****\"+card.cardnumber.toString().substring(12,16)}} </strong>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </body>\n</body>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.css']\n})\nexport class PaymentSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n   <div class=\"container\">\n      <div class=\"row justify-content-center\">\n          <div class=\"col-md-6 justify-content-center\">\n           <div class=\"container\">\n              <img  src=\"https://www.i-q.net.au/wp-content/uploads/success.png\" class=\"rounded\" alt=\"\" />\n           </div>\n           <div class=\"container\">\n              <h2>Payment Successful !</h2>\n              <p>We are delighted to inform you that we received your payments</p>\n              <a routerLink=\"../purchased\" class=\"btn btn-primary\">View Orders</a><br>\n              <a routerLink=\"/app\" style=\"margin-top: 40px;\">Continue Shopping</a>\n           </div>\n          </div>\n        </div>\n  </div>\n</body>","import { Route } from '@angular/compiler/src/core';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { MainComponent } from '../main/main.component';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Routeguard2Service implements CanActivate{\n\n  constructor(private authenticator:AuthenticationService,private router:Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    if(!this.authenticator.isUserLoggedIn()){\n      return true\n    }else{\n      this.router.navigate(['/app'])\n      return false\n    }\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../home/User';\nimport { Product } from '../main/product';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  editProduct(product: any) {\n    return this.http.put('http://localhost:8080/products',product)\n  }\n\n  constructor(private http:HttpClient, private authenticator:AuthenticationService) { }\n\n  getProducts(seller){\n    return this.http.get<Product[]>('http://localhost:8080/products/'+seller)\n  }\n\n  getSellerProducts(seller){\n    return this.http.get<Product[]>('http://localhost:8080/myproducts/'+seller)\n  }\n\n  deleteProduct(product){\n    return this.http.delete('http://localhost:8080/products/'+product)\n  }\n\n  getProductById(product_id){\n    return this.http.get<Product>('http://localhost:8080/productby/'+product_id)\n  }\n\n  acceptBid(bid){\n    return this.http.post('http://localhost:8080/products/accept',bid)\n  }\n\n}\n","export class Categories{\r\n    categoriesList = [\"Mobile\",\"Laptops & Computers\",\"Watches\",\"Books\",\"Toys\",\"Food\",\"Home Appliances\"]\r\n\r\n    getList(){\r\n        return this.categoriesList\r\n    }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AuctionBro';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { BiddingService } from 'src/app/services/bidding.service';\nimport { ProductsService } from 'src/app/services/products.service';\n\n@Component({\n  selector: 'app-myauctions',\n  templateUrl: './myauctions.component.html',\n  styleUrls: ['./myauctions.component.css']\n})\nexport class MyauctionsComponent implements OnInit {\n\n  myProducts:any\n  empty\n  constructor(private productService:ProductsService,private bidsService:BiddingService,private apiService:ApiService) { }\n\n  ngOnInit(): void {\n    this.apiService.getUserProducts(sessionStorage.getItem('authenticatedUser')).subscribe(\n      data =>{\n        this.myProducts = data\n        for (let index = 0; index < this.myProducts.length; index++) {\n          const element = this.myProducts[index];\n          this.apiService.getBidsReceivedForProduct(element.pid).subscribe(\n            data => {\n              element.bids = data\n              for (let i = 0; i < element.bids.length; i++) {\n                const bid = element.bids[i];\n                console.log(bid)\n                this.apiService.getUserNameById(bid['customer_id']).subscribe(\n                  data => {\n                    console.log(data)\n                    bid['biddername'] = data['username']\n                  }\n                )\n              }\n            }\n          )\n        }\n        this.empty = this.myProducts.length === 0;\n      }\n    );\n  }\n\n  deleteProduct(product){\n    this.productService.deleteProduct(product.product_id).subscribe(\n      data => {\n        console.log(data)\n      },\n      error => {\n        console.log(error)\n      }\n    )\n    this.ngOnInit()\n  }\n\n  acceptBid(bid){\n    this.apiService.acceptBid(bid).subscribe(\n      data => {\n        console.log(\"Accepted\")\n      }\n    )\n    this.ngOnInit()\n  }\n}\n","<body>\n  <h2 class=\"text-center text-primary\">Your cuurently acutioned products:</h2><br>\n<div *ngIf=\"empty\" class=\"text-success text-center\">\n  <div class=\"align-content-center justify-content-center\">\n    <img src=\"\\assets\\images\\no_results_found2.png\" style=\"margin-left: auto; margin-right: auto;display: block;border-radius: 100%;height: 300px;\">\n  </div>\n  <h3>\n    You don't have any products in the Auction...\n    <small>Why waiting, Go and add products</small>\n  </h3>\n</div>\n<div class=\"row m-2\">\n    <div class=\"col-md-4 mb-3\" *ngFor=\"let product of myProducts\">\n      <div class=\"card shadow-sm\">\n        <img [src]=\"product.image\" width=\"250px\" height=\"250px\" class=\"rounded mx-auto d-block\">\n        <div class=\"d-flex card-body\" style=\"flex-direction: column;\">\n          <h1 class=\"text-center\">{{product.productname}}</h1>\n          <h5 class=\"mb-4 mt-3\">Initialbid : {{product.initialbid | currency}}</h5>\n          <table class=\"table-sm-1\">\n            <thead>\n              <tr>\n                <th scope=\"col\">No</th>\n                <th scope=\"col\">Bidder Name</th>\n                <th scope=\"col\">Bid Value</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n              <tbody *ngFor=\"let bid of product.bids;let i=index\">\n                <tr>\n                  <td>{{i+1}}</td>\n                  <td>{{bid.biddername[0].toUpperCase()+bid.biddername.substring(1)}}</td>\n                  <td>{{bid.bidval | currency}}</td>\n                  <td><button (click)=\"acceptBid(bid.bid_id)\" class=\"btn btn-success\">Accept</button></td>\n                </tr>\n              </tbody>\n          </table>\n        </div>\n        <div class=\"d-flex justify-content-end\">\n            <h5 class=\"align-origin\">Remove Product From Auction</h5><button (click)=\"deleteProduct(product)\" class=\"btn btn-danger m-1\">Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormGroup, FormBuilder, FormControl, FormsModule} from '@angular/forms';\nimport {AppRoutingModule, routesList} from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClient, HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {FooterComponent} from './footer/footer.component';\nimport { AuthenticationService } from './services/authentication.service';\nimport { MyinterceptorService } from './services/myinterceptor.service';\nimport { RegistrationService } from './services/registration.service';\nimport { RouterguardService } from './services/routerguard.service';\nimport { BiddingComponent } from './main/bidding/bidding.component';\nimport { PaymentComponent } from './main/payment/payment.component';\nimport { PaymentSuccessComponent } from './main/payment-success/payment-success.component';\nimport { PurchasedDetailsComponent } from './main/purchased-details/purchased-details.component';\nimport { SoldDetailsComponent } from './main/sold-details/sold-details.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    routesList,\n    BiddingComponent,\n    PaymentComponent,\n    PaymentSuccessComponent,\n    PurchasedDetailsComponent,\n    SoldDetailsComponent,\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    \n  ],\n  providers: [\n    AuthenticationService,\n    RegistrationService,\n    RouterguardService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MyinterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators,} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { BiddingService } from 'src/app/services/bidding.service';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { BiddingModel } from '../biddingmodel';\n@Component({\n  selector: 'app-bidding',\n  templateUrl: './bidding.component.html',\n  styleUrls: ['./bidding.component.css']\n})\nexport class BiddingComponent implements OnInit {\n\n  bidForm: FormGroup\n  product\n  productId\n  constructor(private route:ActivatedRoute,private http:HttpClient,private productsService:ProductsService,\n    private router:Router,private builder:FormBuilder,private apiService:ApiService) { }\n\n  ngOnInit(): void {\n    this.productId = this.route.snapshot.paramMap.get('id')\n    this.bidForm = this.builder.group({\n      product_id :[this.productId],\n      customer_id: [''],\n      bidval: ['',[Validators.required]],\n      status:[0]\n    }\n    )\n    if(this.productId != null){\n      this.product = this.apiService.getProductByProductId(this.productId).subscribe(\n        data => {\n          if(data == null){\n            this.router.navigate(['/app/products'])\n          }\n          this.product = data\n          this.apiService.getUserNameById(this.product.pid).subscribe(\n            data => {\n              this.product['sellername'] = data['username']\n            }\n          )\n        }\n      )\n    }\n    this.apiService.getUserId(sessionStorage.getItem('authenticatedUser')).subscribe(\n      data => {\n        let id = data\n        this.bidForm.patchValue({customer_id:id})\n      }\n    )\n  }\n\n  isInvalidBid(){\n     return this.product.initialbid > this.bidForm.get('bidval').value\n  }\n  \n  bidForProduct(){\n    const bidDetails = this.bidForm.value\n    this.apiService.addBidForProduct(bidDetails).subscribe(\n      data => {\n        this.router.navigate(['app/mybids'])\n      }\n    )\n  }\n\n}\n","<body>\n    <div class=\"d-flex justify-content-center\">\n        <div class=\"card m-1\">\n            <div class=\"card-body m-1\">\n                <h1 class=\"text-center\">{{product.productname}}</h1><hr>\n                <strong>Images </strong><img [src]=\"product.image\" width=\"300\" height=\"300\" class=\"rounded mx-auto\">\n                <p class=\"card-text ml-5\"><Strong>Description : </Strong>{{product.description}}</p>\n                <p class=\"card-text ml-5\"><strong>Seller : </strong>{{product.sellername}}</p>\n                <p class=\"card-text ml-5\"><strong>InitialBid : </strong>{{product.initialbid | currency}}</p>\n                <form [formGroup]=\"bidForm\" (ngSubmit)=\"bidForProduct()\" class=\"ml-5\">\n                    <input type=\"number\" class=\"form-control-md\" formControlName=\"bidval\" >\n                    <button class=\"btn btn-primary ml-5 flex-right\" [disabled]=\"bidForm.invalid || isInvalidBid()\">Bid</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</body>","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { RegistrationService } from 'src/app/services/registration.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  regUser;\n  isRegisterSuccessful = true;\n\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,private router:Router) {\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      fullname: ['', [Validators.required, Validators.minLength(4)]],\n      username: ['', [Validators.required, Validators.minLength(4)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  registerUser(){\n    this.regUser = this.registerForm.value\n    this.apiService.registerUser(this.regUser).subscribe(\n      data =>{\n        this.router.navigate(['home/login'])\n        console.log(data);\n        this.isRegisterSuccessful = true\n      },\n      error => {\n        console.log(error.error.message)\n        this.isRegisterSuccessful = false\n      }\n    )\n  }\n}\n","<body>\n<div class=\"row justify-content-center \">\n  <div class=\"container align-items-center col-lg-5\">\n    <h3 class=\"text-primary text-md-center mt-md-5\">Register</h3>\n    <hr>\n    <div *ngIf=\"!isRegisterSuccessful\" class=\"alert alert-danger p-0\">\n      User Already Present with the email or username\n    </div>\n    <form [formGroup]=\"registerForm\" class=\"form-group\"  (ngSubmit)=\"registerUser()\">\n      <div class=\"form-group\">\n        <p class=\"text-md text-capitalize p-0 text-primary\">full name</p>\n        <input class=\"form-control\" [class.invalid-input]=\"registerForm.get('fullname').invalid && registerForm.get('fullname').touched\" formControlName=\"fullname\"\n               name=\"fullname\"\n               placeholder=\"enter full name\" type=\"text\">\n\n        <div *ngIf=\"registerForm.get('fullname').invalid && registerForm.get('fullname').touched\">\n          <small *ngIf=\"registerForm.get('fullname').errors?.required\"\n                 [class.text-danger]=\"registerForm.get('fullname').errors?.required\" >name is required</small>\n          <small *ngIf=\"registerForm.get('fullname').errors?.minlength\"\n                 [class.text-danger]=\"registerForm.get('fullname').errors?.minlength\" >name should have at least 4\n            characters</small>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <p class=\"text-md text-capitalize p-0 text-primary\">username</p>\n        <input class=\"form-control\" [class.invalid-input]=\"registerForm.get('username').invalid && registerForm.get('username').touched\" formControlName=\"username\"\n               name=\"username\"\n               placeholder=\"enter  username\" type=\"text\">\n\n        <div *ngIf=\"registerForm.get('username').invalid && registerForm.get('username').touched\">\n          <small *ngIf=\"registerForm.get('username').errors?.required\"\n                 [class.text-danger]=\"registerForm.get('username').errors?.required\" >username is required</small>\n          <small *ngIf=\"registerForm.get('username').errors?.minlength\"\n                 [class.text-danger]=\"registerForm.get('username').errors?.minlength\" >username should have at least 4\n            characters</small>\n        </div>\n      </div>\n\n\n      <div class=\"form-group\">\n        <p class=\"text-md text-capitalize p-0 text-primary\">email</p>\n        <input class=\"form-control\" [class.invalid-input]=\"registerForm.get('email').invalid && registerForm.get('email').touched\" formControlName=\"email\"\n               name=\"email\"\n               placeholder=\"enter email\" type=\"text\">\n\n        <div *ngIf=\"registerForm.get('email').invalid && registerForm.get('email').touched\">\n          <small *ngIf=\"registerForm.get('email').errors?.required\"\n                 [class.text-danger]=\"registerForm.get('email').errors?.required\">email is required</small>\n          <small *ngIf=\"registerForm.get('email').errors?.email\"\n                 [class.text-danger]=\"registerForm.get('email').errors?.email\">enter a valid mail</small>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <p class=\"text-md text-capitalize p-0 text-primary\">password</p>\n        <input class=\"form-control\" [class.invalid-input]=\"registerForm.get('password').invalid && registerForm.get('password').touched\"\n               formControlName=\"password\"\n               type=\"password\">\n        <div *ngIf=\"registerForm.get('password').invalid && registerForm.get('password').touched\">\n          <small *ngIf=\"registerForm.get('password').errors?.required\"\n                 [class.text-danger]=\"registerForm.get('password').errors?.required\">password is required</small>\n          <small *ngIf=\"registerForm.get('password').errors?.minlength\"\n                 [class.text-danger]=\"registerForm.get('password').errors?.minlength\">password should have 6\n            characters</small>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <input [disabled]=\"!registerForm.valid\" class=\"btn btn-primary\" type=\"submit\" value=\"Register\">\n      </div>\n    </form>\n  </div>\n</div>\n</body>\n\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { tokenName } from '@angular/compiler';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private username;\n  private password;\n  private AUTH_TOKEN = 'authenticatedUser'\n  private TOKEN = 'token'\n\n  constructor(private http: HttpClient,private router: Router) { }\n\n  login(username,password){\n    const token = this.createBasicAuthToken(username,password)\n    return this.http.get('http://localhost:8080/users/login',{headers:{Authorization:token}}).pipe(map((res) => {\n      this.username = username;\n      this.password = password;\n      this.registerSuccessfulLogin(username, password);\n      this.router.navigate(['/app'])\n    }));\n  }\n\n  registerSuccessfulLogin(username,password){\n    sessionStorage.setItem(this.AUTH_TOKEN,username)\n    sessionStorage.setItem(this.TOKEN,this.createBasicAuthToken(username,password))\n  }\n\n  isUserLoggedIn(){\n    if(sessionStorage.getItem(this.AUTH_TOKEN)){\n      return true\n    }else{\n      return false\n    }\n  }\n\n  createBasicAuthToken(username: String, password: String) {\n    return 'Basic ' + window.btoa(username + \":\" + password)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.AUTH_TOKEN);\n    this.username = null;\n    this.password = null;\n    this.router.navigate(['home/login'])\n  }\n\n  getHeaders(){\n    return new HttpHeaders({\n      'Authorization': this.createBasicAuthToken(this.username,this.password)\n    })\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { OrdersService } from 'src/app/services/orders.service';\n\n@Component({\n  selector: 'app-sold-details',\n  templateUrl: './sold-details.component.html',\n  styleUrls: ['./sold-details.component.css']\n})\nexport class SoldDetailsComponent implements OnInit {\n\n  orders:any\n  isEmpty = true\n  constructor(private http:HttpClient,private ordersService:OrdersService,private apiService:ApiService) { }\n\n  ngOnInit(): void {\n    this.apiService.getUserId(sessionStorage.getItem('authenticatedUser')).subscribe(\n      data => {\n        this.apiService.getReceivedOrders(data).subscribe(\n          data => {\n            this.orders = data\n            for (const iterator of this.orders) {\n              this.isEmpty = false\n              let seller_id = iterator['customer_id']\n              this.apiService.getUserNameById(seller_id).subscribe(\n                data => {\n                  iterator['customer_name'] = data['username']\n                }\n              )\n            }\n            \n          }\n        )\n      }\n    )\n  }\n\n  getTotal(){\n    let sum = 0\n    for (const iterator of this.orders) {\n      sum += iterator['price']\n    }\n    return sum;\n  }\n\n}\n","<div class=\"container\" *ngIf=\"!isEmpty\">\n    <div class=\"row\">\n        <div class=\"col-md border-left ml-3\">\n            <h3 class=\"text-center\">Sold Products</h3>\n            <hr>\n            <div class=\"row\">\n                <table class=\"table table-bordered\">\n                    <tbody>\n                      <tr *ngFor=\"let order of orders\">\n                        <div class=\"card mb-4\">\n                            <div class=\"card-body row\">\n                                <div class=\"col-5 border-right\">\n                                    <img [src]=\"order.product_image\" width=\"220px\" height=\"220px\" >\n                                </div>\n                                <div class=\"col-7 border-left\">\n                                        <div class=\"card-head\">\n                                            <h3 class=\"text-center text-primary text-bolder p-2\">{{order.product_name}}</h3>\n                                            <hr>\n                                        </div>\n                                        <p>Order Id : <strong>{{order.order_id}}</strong></p>\n                                        <p>Category : <strong>{{order.category}}</strong></p>\n                                        <p>Order Date : <strong>{{order.order_date | date}}</strong></p>\n                                        <p>Seller Name : <strong>{{order.seller_name}}</strong></p>\n                                        <p>Price : <strong>{{order.price | currency}}</strong></p>\n                                </div>\n                            </div>\n                        </div>\n                      </tr>\n                    </tbody>\n                  </table>\n                <hr>\n            </div>\n            <hr>\n            <div class=\"container d-flex justify-content-end\">\n                <strong class=\"text-end\">Total Amount : {{getTotal() | currency}}</strong>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"isEmpty\" class=\"mt-5\">\n    <div>\n        <img src=\"\\assets\\images\\emptyCart.png\" style=\"margin-left: auto; margin-right: auto;display: block\">\n    </div>\n    <h3 class=\"text-center mt-5\">\n        No Orders Received...\n    </h3>\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../home/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n  constructor(private http:HttpClient) { }\n\n  registerUser(user:User){\n    const body = JSON.stringify(user)\n    const headers = new HttpHeaders({'Content-Type':'application/json; charset=utf-8'});\n    return this.http.post('http://localhost:8080/register',body,{headers:headers})\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <img src=\"\\assets\\images\\no_page_found.jpg\" style=\"border-radius: 50%;width: 900px;\">\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BiddingModel } from '../main/biddingmodel';\nimport { Bids } from '../main/Bids';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BiddingService {\n\n  constructor(private http:HttpClient) { }\n\n  bidProduct(model:BiddingModel){\n    return this.http.post('http://localhost:8080/bids',model)\n  }\n\n  viewMyBids(user){\n    return this.http.get<Bids[]>('http://localhost:8080/mybids/'+user)\n  }\n\n  getBidsByProductId(product_id: any): any {\n    return this.http.get<Bids[]>('http://localhost:8080/bids/product/'+product_id)\n  }\n\n  getBidsById(id){\n    return this.http.get('http://localhost:8080/bids/bid/'+id)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {MainComponent} from './main/main.component';\nimport {WelcomeComponent} from './home/welcome/welcome.component';\nimport {LoginComponent} from './home/login/login.component';\nimport {RegisterComponent} from './home/register/register.component';\nimport {ProductslistComponent} from './main/productslist/productslist.component';\nimport {PagenotfoundComponent} from './pagenotfound/pagenotfound.component';\nimport {ViewbidsComponent} from './main/viewbids/viewbids.component';\nimport {MyauctionsComponent} from './main/myauctions/myauctions.component';\nimport {SellproductComponent} from './main/sellproduct/sellproduct.component';\nimport { RouterguardService } from './services/routerguard.service';\nimport { Routeguard2Service } from './services/routeguard2.service';\nimport { BiddingComponent } from './main/bidding/bidding.component';\nimport { PaymentComponent } from './main/payment/payment.component';\nimport { PaymentSuccessComponent } from './main/payment-success/payment-success.component';\nimport { PurchasedDetailsComponent } from './main/purchased-details/purchased-details.component';\nimport { SoldDetailsComponent } from './main/sold-details/sold-details.component';\n\nconst routes: Routes = [\n  {\n    path: 'home' , component: HomeComponent,\n    children: [\n      {path: 'login', component: LoginComponent},\n      {path: 'register', component: RegisterComponent},\n      {path: '', component: WelcomeComponent}\n    ],\n    canActivate:[Routeguard2Service]\n  },\n  {path: 'app', component: MainComponent,\n    children: [\n      {path: '', component: ProductslistComponent},\n      {path: 'products', component: ProductslistComponent},\n      {path: 'mybids', component: ViewbidsComponent},\n      {path: 'myauctions', component: MyauctionsComponent},\n      {path: 'sellproduct', component: SellproductComponent},\n      {path:'bid/:id',component:BiddingComponent},\n      {path:'payment/bid/:id',component:PaymentComponent},\n      {path:'payment-success',component:PaymentSuccessComponent},\n      {path:'purchased',component:PurchasedDetailsComponent},\n      {path:\"sold\",component:SoldDetailsComponent},\n      {path: '**', component: PagenotfoundComponent}\n    ],\n      canActivate: [RouterguardService]\n  },\n  {path: '', redirectTo: '/home', pathMatch: 'full',canActivate:[Routeguard2Service] },\n  {path: '**', component: PagenotfoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routesList = [HomeComponent,\n  WelcomeComponent,\n  MainComponent,\n  LoginComponent,\n  RegisterComponent,\n  WelcomeComponent,\n  PagenotfoundComponent,\n  ProductslistComponent,\n  ViewbidsComponent,\n  MyauctionsComponent,\n  SellproductComponent,\n  PaymentSuccessComponent,\n  PurchasedDetailsComponent,\n  SoldDetailsComponent\n];\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { ProductslistComponent } from './productslist/productslist.component';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  name\n  constructor(private authenticator:AuthenticationService,private router:Router,private apiService:ApiService) { }\n\n  ngOnInit(): void {\n    this.apiService.getUserId(sessionStorage.getItem('authenticatedUser')).subscribe(\n      data => {\n        this.apiService.getUserNameById(data).subscribe(\n          data => {\n            this.name = data['fullname'].toString().split(\" \")[1]\n          }\n        )\n      }\n    )\n  }\n\n  logout(){\n    this.authenticator.logout()\n  }\n}\n","<body>\n  <nav class=\"navbar navbar-inverse\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <a class=\"navbar-brand\" routerLink=\"/home\"><img src=\"\\assets\\images\\logo.png\" style=\"border-radius: 50%;\" height=\"40px\" width=\"40px\"></a>\n        <a class=\"navbar-brand\" routerLink=\"/home\">Bidding BaBa</a>\n      </div>\n      <div class=\"float-right\">\n        <a routerLink=\"products\" routerLinkActive=\"active\">View Products</a>\n        <div class=\"float-right d-flex\">\n          <div class=\"float-right\">\n            <div class=\"drop-div-nav\">\n              <a class=\"drop-btn-nav\">{{name}}</a>\n              <div class=\"drop-down-nav m-0\">\n                <a (click)=\"logout()\" class=\"m-0\">Logout</a>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n  <div id=\"sidenav\">\n    <h3 class=\"mt-2 text-danger bold\">Welcome {{name}}</h3>\n    <div class=\"mt-5\">\n      <a routerLink=\"sellproduct\" routerLinkActive=\"active\">Sell Product</a>\n      <a routerLink=\"mybids\" routerLinkActive=\"active\">Placed Bids</a>\n      <a routerLink=\"myauctions\" routerLinkActive=\"active\">Received Bids</a>\n      <div class=\"drop-div\">\n        <a class=\"drop-btn\">Orders</a>\n        <div class=\"drop-down\">\n          <a routerLink=\"purchased\">Purchased</a>\n          <a routerLink=\"sold\">Sold</a>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</body>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { Categories } from '../Categories';\nimport { Product } from '../product';\n\n@Component({\n  selector: 'app-productslist',\n  templateUrl: './productslist.component.html',\n  styleUrls: ['./productslist.component.css']\n})\nexport class ProductslistComponent implements OnInit {\n  products:Product[]\n  categories = new Categories().categoriesList\n  isEmpty\n  currentUser = sessionStorage.getItem('authenticatedUser');\n\n  constructor(private http:HttpClient,private apiService:ApiService,private router:Router) {\n   }\n\n  ngOnInit(): void {\n    this.apiService.getProducts(this.currentUser).subscribe(\n      data =>{\n        this.products = data\n        for (let index = 0; index < this.products.length; index++) {\n          const element = this.products[index]\n          this.apiService.getUserNameById(element['seller_id']).subscribe(\n            data => {\n              element['sellername'] = data['username']\n            }\n          )\n        }\n        this.isEmpty = this.products.length === 0\n      }\n    )\n  }\n\n  bidProduct(product){\n    this.router.navigate(['app/bid',product.pid])\n  }\n}\n","  <h1 class=\"text-center m-2 p-2\">Welcome {{currentUser[0].toUpperCase()+currentUser.substring(1).toLowerCase()}}!!</h1>\n<div class=\"row m-1\">\n  <div class=\"col-sm-4\" (click)=\"bidProduct(product)\" *ngFor=\"let product of products\">\n    <div class=\"card mb-4 shadow-sm bg-grey\">\n      <img [src]=\"product.image\" width=\"250px\" height=\"250px\" class=\"rounded mx-auto \">\n      <div class=\"d-flex card-body center\" style=\"flex-direction: column;\">\n        <h2>{{product.productname}}</h2>\n        <p class=\"card-text ml-5\"><strong>Description : </strong>{{product.description}}</p>\n        <p class=\"card-text ml-5\"><strong>Seller : </strong>{{product.sellername}}</p>\n        <h5 class=\"card-text ml-5 \"><strong>Price : </strong>{{product.initialbid | currency}}</h5>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container-fluid md-6 shadow-sm justify-content-center align-content-center\" *ngIf=\"isEmpty\">\n  <div class=\"align-content-center justify-content-center\">\n    <img src=\"\\assets\\images\\no_products.png\" style=\"margin-left: auto; margin-right: auto;display: block\">\n  </div>\n  <h1 class=\"text-center\">Sorry, <br>Currently We don't have any Products in Auction...<br><small class=\"text-primary\"> Thanks for Visiting the Site..</small></h1>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}